@using VirtusGo.Core.Domain.Enums
@model VirtusGo.Core.UI.Mvc.Models.AccountViewModels.RegisterViewModel

@{
    ViewBag.Title = "Novo Usuário";
}

<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Cadastro <small>Usuários</small>
        </h1>
        <ol class="breadcrumb">
            <li>
                <a href="/administrativo-usuarios/listar" class="btn btn-block btn-success btn-sm" style="color: white">
                    <span class="fa fa-list-ul"></span> Listar
                </a>
            </li>
        </ol>
    </section>

    <section class="content">
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Dados do Usuário</h3>
            </div>
            @using (Html.BeginForm("Create", "Usuario", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                @Html.Partial("_ErrorSummary")

                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome Usuário" } })
                                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", @placeholder = "CPF" } })
                                    @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome Completo" } })
                                    @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Senha" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Repetir Senha" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <input type="date" placeholder="Data de Nascimento" class="form-control"/>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <select asp-for="PefilUsuario" asp-items="@Html.GetEnumSelectList(typeof(PerfilUsuarioEnum))" class="form-control"></select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-info pull-right">Cadastrar</button>
                </div>
            }
        </div>
    </section>
</div>

@section Scripts
{
    
    <script>
        
        $("#EmpresaId").change(function () {
            $.ajax({
                url: "@Url.Action("ListarUnidades", "Usuario")?id=" + $("#EmpresaId").val(),
                datatype: "json",
                success: function (data) {
                    $("#UnidadeId").empty();
                    $("#UnidadeId").append('<option value>Todas</option>');
                    $.each(data, function (index, element) {
                        if (element == null) {
                            $("#UnidadeId").hide();    
                        }else{
                            $("#UnidadeId").append('<option value="' + element.Id + '">' + element.Fantasia + '</option>');
                        }
                    });
                },
                error: function(err) {
                    console.log(err);
                    alert('Request Status: ' + err.status + ' Status Text: ' + err.statusText + ' ' + err.responseText);
                }
            });
        });

        $("#Cpf").mask("999.999.999-99");
        
        $('#Empresas').next(".select2").hide();
        $("#UnidadeId").hide();
        $("#EmpresaId").hide();
        
        //labels
        $("#lbl2").hide();
        $("#lbl3").hide();
        
        $("#PefilUsuario").change(function() {
            var perfil = $("#PefilUsuario").val();
            
            if (perfil == 1) {
                $('#Empresas').next(".select2").hide();
                $("#UnidadeId").hide();
                $("#EmpresaId").hide();
                
                //labels
                $("#lbl1").hide();
                $("#lbl2").hide();
                $("#lbl3").hide();
            }
            
            if (perfil == 2) {
                $('#Empresas').next(".select2").show();
                $("#EmpresaId").hide();
                $("#UnidadeId").hide();
                
                //labels
                $("#lbl1").show();
                $("#lbl2").hide();
                $("#lbl3").hide();
            }
            
            if (perfil == 3) {
                $('#Empresas').next(".select2").hide();
                $("#EmpresaId").show();
                $("#UnidadeId").show();
                
                //labels
                $("#lbl1").hide();
                $("#lbl2").show();
                $("#lbl3").show();
            }
        });

    </script>
    
    @{
        if (@ViewBag.RetornoPost != null)
        {
            var notificacao = @ViewBag.RetornoPost.ToString().Split(',');
            <script>
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                };
                toastr["@notificacao[0]"]("@notificacao[1]").css("font-size", "20px");
            </script>
        }
    }
}