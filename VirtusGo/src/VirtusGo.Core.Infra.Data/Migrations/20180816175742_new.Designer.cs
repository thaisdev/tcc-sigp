// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VirtusGo.Core.Domain.Enums;
using VirtusGo.Core.Infra.Data.Context;

namespace VirtusGo.Core.Infra.Data.Migrations
{
    [DbContext(typeof(VirtusContext))]
    [Migration("20180816175742_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("VirtusGo.Core.Domain.Beneficiarios.Beneficiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<string>("Bairro")
                        .HasColumnName("DesBairro")
                        .HasMaxLength(40);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnName("DesCEP")
                        .HasMaxLength(9);

                    b.Property<string>("Cidade")
                        .HasColumnName("DesCidade")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("DatCriacao");

                    b.Property<string>("Ddd")
                        .HasColumnName("NumDdd")
                        .HasMaxLength(4);

                    b.Property<string>("Email")
                        .HasColumnName("DesEmail")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("DesEndereco")
                        .HasMaxLength(50);

                    b.Property<int>("Excluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("DesNome")
                        .HasMaxLength(60);

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnName("DesCpfCnpj")
                        .HasMaxLength(19);

                    b.Property<string>("Telefone")
                        .HasColumnName("NumTelefone")
                        .HasMaxLength(10);

                    b.Property<int>("TipPessoa");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnName("DesEstado")
                        .HasMaxLength(2);

                    b.Property<int?>("UsuarioAlteracaoId")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioCriacaoId")
                        .HasColumnName("NumChUsuarioCria");

                    b.HasKey("Id");

                    b.ToTable("beneficiarios");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.CotacaoPontos.CotacaoPontos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DatCriacao");

                    b.Property<DateTime>("DataVigencia")
                        .HasColumnName("DatVigencia");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<int?>("UsuarioIdAltera")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriacao")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<double>("Valor")
                        .HasColumnName("ValValor");

                    b.HasKey("Id");

                    b.ToTable("cotacaopontoes");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Empresa.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("DesBairro")
                        .HasMaxLength(40);

                    b.Property<int>("Bloqueado")
                        .HasColumnName("FlgBloqueado");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnName("DesCEP")
                        .HasMaxLength(9);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("DesCidade")
                        .HasMaxLength(30);

                    b.Property<string>("Contato")
                        .HasColumnName("DesContato")
                        .HasMaxLength(40);

                    b.Property<string>("Contato2")
                        .HasColumnName("DesContato2")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DatCriacao");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnName("NumDdd")
                        .HasMaxLength(2);

                    b.Property<string>("Ddd2")
                        .HasColumnName("NumDdd2")
                        .HasMaxLength(2);

                    b.Property<string>("Ddd3")
                        .HasColumnName("NumDdd3")
                        .HasMaxLength(2);

                    b.Property<int?>("DiasParaExpiracaoPontos")
                        .HasColumnName("NumDiasExpiracaoPontos");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("DesEmail")
                        .HasMaxLength(50);

                    b.Property<string>("Email2")
                        .HasColumnName("DesEmail2")
                        .HasMaxLength(50);

                    b.Property<string>("Email3")
                        .HasColumnName("DesEmail3")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("DesEndereco")
                        .HasMaxLength(50);

                    b.Property<int>("Excluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnName("DesFantasia")
                        .HasMaxLength(50);

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnName("DesCNPJ")
                        .HasMaxLength(19);

                    b.Property<int>("Plano");

                    b.Property<double?>("PorcentagemPadraoPontos")
                        .HasColumnName("ValPorcGeralPontosFaixa");

                    b.Property<int>("ProfissionalLiberal");

                    b.Property<int>("QuantidadeFilial")
                        .HasColumnName("ValQtdMaxFilial");

                    b.Property<string>("Ramo");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnName("DesRazSocial")
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("NumTelefone")
                        .HasMaxLength(10);

                    b.Property<string>("Telefone2")
                        .HasColumnName("NumTelefone2")
                        .HasMaxLength(10);

                    b.Property<string>("Telefone3")
                        .HasColumnName("NumTelefone3")
                        .HasMaxLength(10);

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnName("DesEstado")
                        .HasMaxLength(2);

                    b.Property<int?>("UsuarioIdAlteracao")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriacao")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<double?>("ValorComissãoGeral")
                        .HasColumnName("ValComissãoGeral");

                    b.HasKey("Id");

                    b.ToTable("empresas");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Faixas.Faixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DatCriacao");

                    b.Property<int>("EmpresaId")
                        .HasColumnName("NumChEmpresa");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<int?>("UnidadeId")
                        .HasColumnName("NumChFilial");

                    b.Property<int?>("UsuarioIdAltera")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriacao")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<double>("ValorAte")
                        .HasColumnName("ValAte");

                    b.Property<double>("ValorDe")
                        .HasColumnName("ValDe");

                    b.Property<double>("ValorPorcentagem")
                        .HasColumnName("ValPorcentagem");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("faixas");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Parametro.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DatCriacao");

                    b.Property<int>("DiasParaExpiracaoPontos")
                        .HasColumnName("NumDiasExpiracaoPontos");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<int?>("UsuarioIdAlteracao")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriacao")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<double>("ValorComissaoGeral")
                        .HasColumnName("ValComissãoGeral");

                    b.Property<double?>("ValorPorcentagemGeralPontosFaixa")
                        .IsRequired()
                        .HasColumnName("ValPorcGeralPontosFaixa");

                    b.HasKey("Id");

                    b.ToTable("parametroes");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Pontuacao.Pontuacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<int>("BeneficiarioId")
                        .HasColumnName("NumChBeneficiario");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnName("DatCompra");

                    b.Property<DateTime?>("DataInterface")
                        .HasColumnName("DatInterface");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnName("DatLancamento");

                    b.Property<string>("DescricaoErroInterface")
                        .HasColumnName("DesErroInterface")
                        .HasMaxLength(100);

                    b.Property<int>("EmpresaId")
                        .HasColumnName("NumChEmpresa");

                    b.Property<string>("FlagErroInterface")
                        .HasColumnName("FlgErroInterface");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<string>("FlagInterface")
                        .HasColumnName("FlgInterface");

                    b.Property<int?>("UnidadeId")
                        .HasColumnName("NumChFilial");

                    b.Property<int?>("UsuarioIdAlteracao")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriacao")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<int?>("UsuarioIdInterface")
                        .HasColumnName("NumChUsuarioInterface");

                    b.Property<double>("ValorLancamento")
                        .HasColumnName("ValLancto");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiarioId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("pontuacaos");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.PontuacaoPdv.PontuacaoPDV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("NumCpf")
                        .HasMaxLength(18);

                    b.Property<DateTime>("DataCompra")
                        .HasColumnName("DatCompra");

                    b.Property<DateTime?>("DataInterface")
                        .HasColumnName("DatInterface");

                    b.Property<string>("Email")
                        .HasColumnName("DesEmail")
                        .HasMaxLength(60);

                    b.Property<int>("EmpresaId")
                        .HasColumnName("NumChEmpresa");

                    b.Property<string>("FlagErroInterface")
                        .HasColumnName("FlgErroInterface");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<string>("FlagInterface")
                        .HasColumnName("FlgInterface");

                    b.Property<string>("MensagemErroInterface")
                        .HasColumnName("DesErroInterface");

                    b.Property<string>("Operador")
                        .IsRequired()
                        .HasColumnName("DesOperador")
                        .HasMaxLength(60);

                    b.Property<int>("UnidadeId")
                        .HasColumnName("NumChFilial");

                    b.Property<int?>("UsuarioIdInterface")
                        .HasColumnName("NumChUsuarioInterface");

                    b.Property<double>("ValorLancamento")
                        .HasColumnName("ValLancto");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("pontuacaopdvs");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Unidades.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumChave");

                    b.Property<string>("Bairro")
                        .HasColumnName("DesBairro")
                        .HasMaxLength(50);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnName("DesCEP")
                        .HasMaxLength(9);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("DesCidade")
                        .HasMaxLength(60);

                    b.Property<double?>("ComissaoGeral")
                        .IsRequired()
                        .HasColumnName("ValComissãoGeral");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DatAlteracao");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("DatCriacao");

                    b.Property<string>("Ddd")
                        .HasColumnName("NumDdd")
                        .HasMaxLength(2);

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnName("DesCNPJ")
                        .HasMaxLength(18);

                    b.Property<string>("Email")
                        .HasColumnName("DesEmail")
                        .HasMaxLength(60);

                    b.Property<int>("EmpresaId")
                        .HasColumnName("NumChEmpresa");

                    b.Property<string>("Endereco")
                        .HasColumnName("DesEndereco")
                        .HasMaxLength(60);

                    b.Property<string>("Fantasia")
                        .IsRequired()
                        .HasColumnName("DesFantasia")
                        .HasMaxLength(60);

                    b.Property<int>("FlagBloqueado")
                        .HasColumnName("FlgBloqueado");

                    b.Property<int>("FlagExcluido")
                        .HasColumnName("FlgExcluido");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<int?>("NumeroDiasParaExpiracaoPontos")
                        .IsRequired()
                        .HasColumnName("NumDiasExpiracaoPontos");

                    b.Property<string>("Ramo");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnName("DesRazSocial")
                        .HasMaxLength(60);

                    b.Property<string>("Telefone")
                        .HasColumnName("NumTelefone")
                        .HasMaxLength(10);

                    b.Property<string>("Uf")
                        .HasColumnName("DesEstado")
                        .HasMaxLength(2);

                    b.Property<int?>("UsuarioIdAltera")
                        .HasColumnName("NumChUsuarioAlt");

                    b.Property<int>("UsuarioIdCriador")
                        .HasColumnName("NumChUsuarioCria");

                    b.Property<double?>("ValorPorcentagemGeralPontos")
                        .IsRequired()
                        .HasColumnName("ValPorcGeralPontosFaixa");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("filials");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Faixas.Faixa", b =>
                {
                    b.HasOne("VirtusGo.Core.Domain.Empresa.Empresas", "Empresa")
                        .WithMany("Faixa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtusGo.Core.Domain.Unidades.Unidade", "Unidades")
                        .WithMany("Faixa")
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Pontuacao.Pontuacao", b =>
                {
                    b.HasOne("VirtusGo.Core.Domain.Beneficiarios.Beneficiario", "Beneficiarios")
                        .WithMany("Pontuacao")
                        .HasForeignKey("BeneficiarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtusGo.Core.Domain.Empresa.Empresas", "Empresa")
                        .WithMany("Pontuacao")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtusGo.Core.Domain.Unidades.Unidade", "Unidade")
                        .WithMany("Pontuacao")
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.PontuacaoPdv.PontuacaoPDV", b =>
                {
                    b.HasOne("VirtusGo.Core.Domain.Unidades.Unidade", "Unidade")
                        .WithMany("PontuacaoPdv")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VirtusGo.Core.Domain.Unidades.Unidade", b =>
                {
                    b.HasOne("VirtusGo.Core.Domain.Empresa.Empresas", "Empresa")
                        .WithMany("Unidade")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
